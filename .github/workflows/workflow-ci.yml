name: Java CI with Maven

on:
  push:
    branches: '*'
  pull_request:
    branches: '*'

jobs:
  preflight:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          architecture: x64
          cache: maven
      - name: Validate Commit Message
        run: |
          # Regex to validate the type pattern
          REGEX="^((Merge[ a-z-]* branch.)|(Revert)|((build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test)(\(.\))?!?: .))"
          
          COMMIT_MESSAGE=$(git log --format=%B -n 1 $GITHUB_SHA)
          
          echo "Commit Message: ${COMMIT_MESSAGE}"
          
          if ! [[ $COMMIT_MESSAGE =~ $REGEX ]]; then
            echo >&2 "ERROR: Commit aborted for not following the Conventional Commit standard."
            exit 1
          else
            echo >&2 "Valid commit message."
          fi
          

  build:
    runs-on: ubuntu-latest
    needs: preflight
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Build with Maven
        run:  |
          mvn -B package -f pom.xml
          if [ $? -ne 0 ]; then
            echo "Build failed. Por favor cheque as suas mudanças e tente novamente."
            exit 1
          fi
  
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Run the Maven verify phase
        run: |
          mvn --batch-mode --update-snapshots verify -f pom.xml
          if [ $? -ne 0 ]; then
            echo "Build failed. Por favor cheque as suas mudanças e tente novamente."
            exit 1
          fi
  
  release:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Install semantic-release
        run: npm install -g semantic-release@17 @semantic-release/git@10
      - name: Semantic Release
        run: semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
